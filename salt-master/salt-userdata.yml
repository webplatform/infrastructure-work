#cloud-config

#
# Salt Master Cloud init config
#
# ALMOST SAME AS userdata.yml we’ll use for other nodes, BUT we’ll use 127.0.0.1 in resolv.conf and package includes salt-master
#
#
# To learn more about Cloud-Init details, refer to:
#
# Ref:
#   - http://cloudinit.readthedocs.org/en/latest/topics/examples.html#call-a-url-when-finished
#   - https://help.ubuntu.com/community/CloudInit
#   - http://stackoverflow.com/questions/23411408/how-do-i-set-up-cloud-init-on-custom-amis-in-aws-centos
#
# Get current VM userdata (OpenStack internal API call accessible from any VM)
#
#     curl http://169.254.169.254/openstack/2013-10-17/user_data
#


manage_etc_hosts: false # Has to be set to false for everybody. Otherwise we need a DNS
manage-resolv-conf: false


locale: en_US.UTF-8
timezone: America/New_York
package_upgrade: true
package_update: true
package_reboot_if_required: true


# This is run at EVERY boot, good to ensure things are at the right place
bootcmd:
  - grep -q -e 'nameserver' /etc/resolvconf/resolv.conf.d/head || printf "nameserver 127.0.0.1\n" >> /etc/resolvconf/resolv.conf.d/head
  # For production, comment ^ and uncomment below
  #- grep -q -e 'wpdn' /etc/resolvconf/resolv.conf.d/base || printf "search production.wpdn\ndomain production.wpdn\nnameserver 8.8.8.8" > /etc/resolvconf/resolv.conf.d/base
  - grep -q -e 'wpdn' /etc/resolvconf/resolv.conf.d/base || printf "search production.wpdn\ndomain production.wpdn\nnameserver 8.8.8.8" > /etc/resolvconf/resolv.conf.d/base
  - grep -q -e 'wpdn' /etc/resolv.conf || resolvconf -u


runcmd:
  - sed -i "s/127.0.0.1 localhost/127.0.1.1 $(hostname).staging.wpdn $(hostname)\n127.0.0.1 localhost/" /etc/hosts
  #- sed -i "s/127.0.0.1 localhost/127.0.1.1 $(hostname).production.wpdn $(hostname)\n127.0.0.1 localhost/" /etc/hosts

  # Make sure we have its the same in:
  #  - https://github.com/webplatform/ops in vagrant-workbench/Vagrantfile
  #  - https://github.com/webplatform/ops in salt-master/salt-userdata.yml
  ########
  - add-apt-repository -y ppa:saltstack/salt
  - apt-get update
  - apt-get -yqq upgrade
  - apt-get -yqq autoremove
  - apt-get -yqq install python-dulwich python-git git salt-master salt-minion
  - touch /etc/salt/minion.d/id.conf ; grep -q -e "salt" /etc/salt/minion.d/id.conf || printf "id: salt\n" >> /etc/salt/minion.d/id.conf
  ########



write_files:
  - encoding: b64
    ## MAKE SURE ONLY ONE content line is uncommented below.
    ## Below is for staging
    content: bGV2ZWw6IHN0YWdpbmc=
    ## Below is for production
    #content: bGV2ZWw6IHByb2R1Y3Rpb24=
    ## Below is for workbench
    #content: bGV2ZWw6IHdvcmtiZW5jaA==
    path: /etc/salt/grains


# The content ^ contains a base64 encoded string that contains exactly "level:staging" (without quotes)
# it was meant to make sure that cloudinit wouldn’t break because it was taking previous attempts as part
# of the rest of this YAML document.


packages:
  - python-software-properties
  - software-properties-common


# vim: et ts=2 sw=2 ft=yaml:
